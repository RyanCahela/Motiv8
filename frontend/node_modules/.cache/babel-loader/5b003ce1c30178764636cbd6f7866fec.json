{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/CAPSTONE/motiv8/src/components/QuoteCanvas.js\";\nimport React from 'react';\nexport default class QuoteCanvas extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.styles = {\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n      backgroundImage: \"url(\".concat(this.props.backgroundImageUrl, \")\"),\n      fontFamily: this.props.fontFamily,\n      width: '400px',\n      height: '400px'\n    };\n  }\n\n  componentDidMount() {//const ctx = this.refs.canvas.getContext('2d');\n  }\n\n  render() {\n    return React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      style: this.styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/dev/Desktop/CAPSTONE/motiv8/src/components/QuoteCanvas.js"],"names":["React","QuoteCanvas","Component","styles","backgroundSize","backgroundPosition","backgroundImage","props","backgroundImageUrl","fontFamily","width","height","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEvDC,MAFuD,GAE9C;AACPC,MAAAA,cAAc,EAAE,OADT;AAEPC,MAAAA,kBAAkB,EAAE,eAFb;AAGPC,MAAAA,eAAe,gBAAS,KAAKC,KAAL,CAAWC,kBAApB,MAHR;AAIPC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAJhB;AAKPC,MAAAA,KAAK,EAAE,OALA;AAMPC,MAAAA,MAAM,EAAE;AAND,KAF8C;AAAA;;AAWvDC,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKV,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAnBsD","sourcesContent":["import React from 'react'\n\nexport default class QuoteCanvas extends React.Component {\n\n  styles = {\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center',\n    backgroundImage: `url(${this.props.backgroundImageUrl})`,\n    fontFamily: this.props.fontFamily,\n    width: '400px',\n    height: '400px'\n  }\n\n  componentDidMount() {\n    //const ctx = this.refs.canvas.getContext('2d');\n  }\n\n  render() {\n    return (\n      <canvas ref=\"canvas\" style={this.styles}></canvas>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}