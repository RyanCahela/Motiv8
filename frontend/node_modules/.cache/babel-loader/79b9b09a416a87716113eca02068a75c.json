{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/CAPSTONE/motiv8/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Nav from './components/Nav';\nimport Quote from './components/Quote';\nimport QuoteDisplay from './components/QuoteDisplay';\nimport QuoteControls from './components/QuoteControls';\nimport fontPairings from './fonts/fontPairings';\nimport quotes from './quotes/quotes';\nimport IteratorServices from './Services/IteratorServices';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [...quotes],\n      currentQuote: '',\n      backgroundImageUrls: [],\n      fontPairings: [...fontPairings],\n      backgroundImageUrl: '',\n      fontPair: {},\n      previousBackgroundImageUrl: '',\n      previousFontPair: {},\n      keepBackground: false,\n      keepFonts: false,\n      keepQuote: false\n    };\n    this.handleRandomize = this.handleRandomize.bind(this);\n    this.handleUndo = this.handleUndo.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBackgroundImages(30);\n    this.fontPairItObj = IteratorServices.createIterator(this.state.fontPairings);\n    this.quoteItObj = IteratorServices.creatIterator(this.state.quotes);\n  }\n\n  handleRandomize() {\n    this.setBackgroundUrl(this.backgroundUrlItObj.next());\n    this.setFontPairing(this.fontPairItObj.next());\n    this.setQuote(this.quoteItObj.next());\n  }\n\n  handleUndo() {\n    this.setState(currentState => {\n      return {\n        backgroundImageUrl: currentState.previousBackgroundImageUrl,\n        fontPair: currentState.previousFontPair,\n        currentQuote: currentState.previousQuote\n      };\n    });\n  }\n\n  handleCheckboxCheck(e) {} //HELPER FUNCTIONS\n\n\n  getBackgroundImages(numberOfImages) {\n    if (numberOfImages > 30) {\n      numberOfImages = 30;\n    }\n\n    fetch(\"https://api.unsplash.com/photos/random?count=\".concat(numberOfImages), {\n      headers: {\n        Authorization: 'Client-ID 637ad8107185907a6e559449be25e4c6fb9429f66f500149003592bbf8bf49ce'\n      }\n    }).then(res => res.json()).then(resJson => {\n      this.setState({\n        backgroundImageUrls: resJson\n      }, //runs after setState\n      () => {\n        this.backgroundUrlItObj = IteratorServices.createIterator(this.state.backgroundImageUrls);\n        this.handleRandomize();\n      });\n    });\n  }\n\n  setBackgroundUrl({\n    value,\n    done\n  }) {\n    if (!done) {\n      this.setState(currentState => {\n        return {\n          backgroundImageUrl: value.urls.regular,\n          previousBackgroundImageUrl: currentState.backgroundImageUrl\n        };\n      });\n    } //create new iterator when old one runs out\n    else {\n        this.getBackgroundImages(30);\n      }\n  }\n\n  setFontPairing({\n    value,\n    done\n  }) {\n    if (!done) {\n      this.setState(currentState => {\n        return {\n          fontPair: value,\n          previousFontPair: currentState.fontPair\n        };\n      });\n    } else {\n      //if iterator done create new iterator then call the first value on it.\n      this.fontPairItObj = IteratorServices.createIterator(this.state.fontPairings);\n      this.setFontPairing(this.fontPairItObj.next());\n    }\n  }\n\n  setQuote({\n    value,\n    done\n  }) {\n    if (!done) {\n      this.setState(currentState => {\n        return {\n          currentQuote: value,\n          previousQuote: currentState.currentQuote\n        };\n      });\n    } else {\n      this.quoteItObj = IteratorServices.creatIterator(this.state.quotes);\n      this.setQuote(this.quoteItObj.next());\n    }\n  }\n\n  render() {\n    //create components to pass down\n    const quoteDisplay = React.createElement(QuoteDisplay, {\n      backgroundImageUrl: this.state.backgroundImageUrl,\n      fontPair: this.state.fontPair,\n      quote: this.state.currentQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    });\n    const quoteControls = React.createElement(QuoteControls, {\n      handleCheckboxCheck: this.handleCheckboxCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, null, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Quote, {\n      quoteDisplay: quoteDisplay,\n      quoteControls: quoteControls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      handleRandomize: this.handleRandomize,\n      handleUndo: this.handleUndo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dev/Desktop/CAPSTONE/motiv8/src/App.js"],"names":["React","Menu","Nav","Quote","QuoteDisplay","QuoteControls","fontPairings","quotes","IteratorServices","App","Component","constructor","props","state","currentQuote","backgroundImageUrls","backgroundImageUrl","fontPair","previousBackgroundImageUrl","previousFontPair","keepBackground","keepFonts","keepQuote","handleRandomize","bind","handleUndo","componentDidMount","getBackgroundImages","fontPairItObj","createIterator","quoteItObj","creatIterator","setBackgroundUrl","backgroundUrlItObj","next","setFontPairing","setQuote","setState","currentState","previousQuote","handleCheckboxCheck","e","numberOfImages","fetch","headers","Authorization","then","res","json","resJson","value","done","urls","regular","render","quoteDisplay","quoteControls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Nav from './components/Nav';\nimport Quote from './components/Quote';\nimport QuoteDisplay from './components/QuoteDisplay';\nimport QuoteControls from './components/QuoteControls';\nimport fontPairings from './fonts/fontPairings';\nimport quotes from './quotes/quotes';\nimport IteratorServices from './Services/IteratorServices';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [...quotes],\n      currentQuote: '',\n      backgroundImageUrls: [],\n      fontPairings: [...fontPairings],\n      backgroundImageUrl: '',\n      fontPair: {},\n      previousBackgroundImageUrl: '',\n      previousFontPair: {},\n      keepBackground: false,\n      keepFonts: false,\n      keepQuote: false,\n    }\n\n    this.handleRandomize = this.handleRandomize.bind(this);\n    this.handleUndo = this.handleUndo.bind(this);\n  }\n\n\n  componentDidMount() {\n    this.getBackgroundImages(30);\n    this.fontPairItObj = IteratorServices.createIterator(this.state.fontPairings);\n    this.quoteItObj = IteratorServices.creatIterator(this.state.quotes);\n  }\n  \n  handleRandomize() {\n    this.setBackgroundUrl(this.backgroundUrlItObj.next());\n    this.setFontPairing(this.fontPairItObj.next());\n    this.setQuote(this.quoteItObj.next());\n  }\n  \n  handleUndo() {\n    this.setState((currentState) => {\n      return {\n        backgroundImageUrl: currentState.previousBackgroundImageUrl,\n        fontPair: currentState.previousFontPair,\n        currentQuote: currentState.previousQuote\n      }\n    })\n  }\n\n  handleCheckboxCheck(e) {\n\n  }\n  \n  \n  //HELPER FUNCTIONS\n  getBackgroundImages(numberOfImages) {\n    if(numberOfImages > 30) {\n      numberOfImages = 30;\n    }\n    fetch(`https://api.unsplash.com/photos/random?count=${numberOfImages}`, {\n      headers: {\n        Authorization: 'Client-ID 637ad8107185907a6e559449be25e4c6fb9429f66f500149003592bbf8bf49ce'\n      }\n    })\n    .then(res => res.json())\n    .then(resJson => {\n      this.setState({\n        backgroundImageUrls: resJson,\n      },\n      //runs after setState\n      () => {\n        this.backgroundUrlItObj = IteratorServices.createIterator(this.state.backgroundImageUrls)\n        this.handleRandomize();\n      })\n    });\n  }\n  \n  setBackgroundUrl({value, done}) {\n    if(!done) {\n      this.setState((currentState) => {\n        return {\n          backgroundImageUrl: value.urls.regular,\n          previousBackgroundImageUrl: currentState.backgroundImageUrl\n        }\n      })\n    }\n    //create new iterator when old one runs out\n    else {\n      this.getBackgroundImages(30)\n    }\n  }\n  \n  setFontPairing({value, done}) {\n    if(!done) {\n      this.setState((currentState) => {\n        return {\n          fontPair: value,\n          previousFontPair: currentState.fontPair \n        }\n      })\n    }\n    else {\n      //if iterator done create new iterator then call the first value on it.\n      this.fontPairItObj = IteratorServices.createIterator(this.state.fontPairings);\n      this.setFontPairing(this.fontPairItObj.next());\n    }\n  }\n  \n  setQuote({value, done}) {\n    if(!done) {\n      this.setState(currentState => {\n        return {\n          currentQuote: value,\n          previousQuote: currentState.currentQuote\n        }\n      })\n    }\n    else {\n      this.quoteItObj = IteratorServices.creatIterator(this.state.quotes);\n      this.setQuote(this.quoteItObj.next());\n    }\n  }\n\n  render() {\n    //create components to pass down\n    const quoteDisplay = (\n      <QuoteDisplay \n      backgroundImageUrl={this.state.backgroundImageUrl} \n      fontPair={this.state.fontPair}\n      quote={this.state.currentQuote}/>\n    )\n    const quoteControls = (\n      <QuoteControls \n        handleCheckboxCheck={this.handleCheckboxCheck}/>\n    )\n        \n    return (\n      <>\n    <Menu />\n    <Quote quoteDisplay={quoteDisplay} quoteControls={quoteControls}/>\n    <Nav handleRandomize={this.handleRandomize} handleUndo={this.handleUndo}/>\n    </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}