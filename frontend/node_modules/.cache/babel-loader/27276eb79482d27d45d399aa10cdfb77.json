{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/CAPSTONE/motiv8/src/components/QuoteCanvas.js\";\nimport React from 'react';\nexport default class QuoteCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    function setupCanvas(canvas) {\n      // Get the device pixel ratio, falling back to 1.\n      var dpr = window.devicePixelRatio || 1; // Get the size of the canvas in CSS pixels.\n\n      var rect = canvas.getBoundingClientRect(); // Give the canvas pixel dimensions of their CSS\n      // size * the device pixel ratio.\n\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      var ctx = canvas.getContext('2d'); // Scale all drawing operations by the dpr, so you\n      // don't have to worry about the difference.\n\n      ctx.scale(dpr, dpr);\n      return ctx;\n    }\n\n    setupCanvas(this.refs.canvas);\n  }\n\n  componentDidMount() {\n    let backdropSideMargin = 0.1 * this.refs.canvas.width; //0.1 = 10% margin\n\n    let backdropVertMargin = 0.25 * this.refs.canvas.height; //0.25 = 25% of height\n\n    let backdropHeight = this.refs.canvas.height / 2; //2 = half the height of canvas, \n\n    let backdropWidth = this.refs.canvas.width - backdropSideMargin * 2; // 2 is to account for both left and right margin.\n\n    const ctx = this.refs.canvas.getContext('2d');\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7'; //create backdrop\n\n    ctx.fillRect(backdropSideMargin, //x coordinate to start drawing\n    backdropVertMargin, //y coordinate to start drawing\n    backdropWidth, backdropHeight);\n    ctx.fillStyle = 'white';\n    ctx.fillText(\"\".concat(this.props.quote.body), backdropSideMargin, backdropVertMargin);\n  }\n\n  render() {\n    console.log(this.props);\n    const backgroundStyles = {\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n      backgroundImage: \"url(\".concat(this.props.backgroundImageUrl, \")\"),\n      width: '100%'\n    };\n    return React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      style: backgroundStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/dev/Desktop/CAPSTONE/motiv8/src/components/QuoteCanvas.js"],"names":["React","QuoteCanvas","Component","constructor","props","setupCanvas","canvas","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","ctx","getContext","scale","refs","componentDidMount","backdropSideMargin","backdropVertMargin","backdropHeight","backdropWidth","fillStyle","fillRect","fillText","quote","body","render","console","log","backgroundStyles","backgroundSize","backgroundPosition","backgroundImage","backgroundImageUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AAEA,aAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;AACA,UAAIC,GAAG,GAAGC,MAAM,CAACC,gBAAP,IAA2B,CAArC,CAF2B,CAG3B;;AACA,UAAIC,IAAI,GAAGJ,MAAM,CAACK,qBAAP,EAAX,CAJ2B,CAK3B;AACA;;AACAL,MAAAA,MAAM,CAACM,KAAP,GAAeF,IAAI,CAACE,KAAL,GAAaL,GAA5B;AACAD,MAAAA,MAAM,CAACO,MAAP,GAAgBH,IAAI,CAACG,MAAL,GAAcN,GAA9B;AACA,UAAIO,GAAG,GAAGR,MAAM,CAACS,UAAP,CAAkB,IAAlB,CAAV,CAT2B,CAU3B;AACA;;AACAD,MAAAA,GAAG,CAACE,KAAJ,CAAUT,GAAV,EAAeA,GAAf;AACA,aAAOO,GAAP;AACD;;AAEDT,IAAAA,WAAW,CAAC,KAAKY,IAAL,CAAUX,MAAX,CAAX;AAED;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,kBAAkB,GAAG,MAAM,KAAKF,IAAL,CAAUX,MAAV,CAAiBM,KAAhD,CADkB,CACqC;;AACvD,QAAIQ,kBAAkB,GAAG,OAAO,KAAKH,IAAL,CAAUX,MAAV,CAAiBO,MAAjD,CAFkB,CAEsC;;AACxD,QAAIQ,cAAc,GAAG,KAAKJ,IAAL,CAAUX,MAAV,CAAiBO,MAAjB,GAA0B,CAA/C,CAHkB,CAGgC;;AAClD,QAAIS,aAAa,GACf,KAAKL,IAAL,CAAUX,MAAV,CAAiBM,KAAjB,GAAyBO,kBAAkB,GAAG,CADhD,CAJkB,CAKgC;;AAElD,UAAML,GAAG,GAAG,KAAKG,IAAL,CAAUX,MAAV,CAAiBS,UAAjB,CAA4B,IAA5B,CAAZ;AACAD,IAAAA,GAAG,CAACS,SAAJ,GAAgB,mBAAhB,CARkB,CAUlB;;AACAT,IAAAA,GAAG,CAACU,QAAJ,CACEL,kBADF,EACsB;AACpBC,IAAAA,kBAFF,EAEsB;AACpBE,IAAAA,aAHF,EAIED,cAJF;AAKAP,IAAAA,GAAG,CAACS,SAAJ,GAAgB,OAAhB;AACAT,IAAAA,GAAG,CAACW,QAAJ,WAAgB,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,IAAjC,GAAyCR,kBAAzC,EAA6DC,kBAA7D;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAjB;AACA,UAAM2B,gBAAgB,GAAG;AACvBC,MAAAA,cAAc,EAAE,OADO;AAEvBC,MAAAA,kBAAkB,EAAE,eAFG;AAGvBC,MAAAA,eAAe,gBAAS,KAAK9B,KAAL,CAAW+B,kBAApB,MAHQ;AAIvBvB,MAAAA,KAAK,EAAE;AAJgB,KAAzB;AAMA,WACE;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEmB,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAxDsD","sourcesContent":["import React from 'react'\n\nexport default class QuoteCanvas extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    function setupCanvas(canvas) {\n      // Get the device pixel ratio, falling back to 1.\n      var dpr = window.devicePixelRatio || 1;\n      // Get the size of the canvas in CSS pixels.\n      var rect = canvas.getBoundingClientRect();\n      // Give the canvas pixel dimensions of their CSS\n      // size * the device pixel ratio.\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      var ctx = canvas.getContext('2d');\n      // Scale all drawing operations by the dpr, so you\n      // don't have to worry about the difference.\n      ctx.scale(dpr, dpr);\n      return ctx;\n    }\n\n    setupCanvas(this.refs.canvas);\n\n  }\n\n  componentDidMount() {\n    let backdropSideMargin = 0.1 * this.refs.canvas.width; //0.1 = 10% margin\n    let backdropVertMargin = 0.25 * this.refs.canvas.height //0.25 = 25% of height\n    let backdropHeight = this.refs.canvas.height / 2; //2 = half the height of canvas, \n    let backdropWidth = \n      this.refs.canvas.width - backdropSideMargin * 2 // 2 is to account for both left and right margin.\n    \n    const ctx = this.refs.canvas.getContext('2d');\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7';\n\n    //create backdrop\n    ctx.fillRect(\n      backdropSideMargin, //x coordinate to start drawing\n      backdropVertMargin, //y coordinate to start drawing\n      backdropWidth,\n      backdropHeight);\n    ctx.fillStyle = 'white';\n    ctx.fillText(`${this.props.quote.body}`, backdropSideMargin, backdropVertMargin);\n  }\n\n  render() {\n    console.log(this.props);\n    const backgroundStyles = {\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n      backgroundImage: `url(${this.props.backgroundImageUrl})`,\n      width: '100%',\n    }\n    return (\n      <canvas ref=\"canvas\" style={backgroundStyles}></canvas>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}