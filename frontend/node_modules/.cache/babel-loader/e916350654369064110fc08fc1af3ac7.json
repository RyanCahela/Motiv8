{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/CAPSTONE/motiv8/src/components/QuoteCanvas.js\";\nimport React from 'react';\nexport default class QuoteCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let backdropSideMargin = 0.1 * this.refs.canvas.width; //0.1 = 10% margin\n\n    let backdropVertMargin = 0.25 * this.refs.canvas.height; //0.25 = 25% of height\n\n    let backdropHeight = this.refs.canvas.height / 2; //2 = half the height of canvas, \n\n    let backdropWidth = this.refs.canvas.width - backdropSideMargin * 2; // 2 is to account for both left and right margin.\n\n    const ctx = this.refs.canvas.getContext('2d');\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7'; //create backdrop\n\n    ctx.fillRect(backdropSideMargin, //x coordinate to start drawing\n    backdropVertMargin, //y coordinate to start drawing\n    backdropWidth, backdropHeight);\n    ctx.fillText(\"\".concat(this.props.quote.body));\n  }\n\n  render() {\n    console.log(this.props);\n    const backgroundStyles = {\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n      backgroundImage: \"url(\".concat(this.props.backgroundImageUrl, \")\"),\n      width: '100%'\n    };\n    return React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      style: backgroundStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/dev/Desktop/CAPSTONE/motiv8/src/components/QuoteCanvas.js"],"names":["React","QuoteCanvas","Component","constructor","props","componentDidMount","backdropSideMargin","refs","canvas","width","backdropVertMargin","height","backdropHeight","backdropWidth","ctx","getContext","fillStyle","fillRect","fillText","quote","body","render","console","log","backgroundStyles","backgroundSize","backgroundPosition","backgroundImage","backgroundImageUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,kBAAkB,GAAG,MAAM,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,KAAhD,CADkB,CACqC;;AACvD,QAAIC,kBAAkB,GAAG,OAAO,KAAKH,IAAL,CAAUC,MAAV,CAAiBG,MAAjD,CAFkB,CAEsC;;AACxD,QAAIC,cAAc,GAAG,KAAKL,IAAL,CAAUC,MAAV,CAAiBG,MAAjB,GAA0B,CAA/C,CAHkB,CAGgC;;AAClD,QAAIE,aAAa,GACf,KAAKN,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,GAAyBH,kBAAkB,GAAG,CADhD,CAJkB,CAKgC;;AAElD,UAAMQ,GAAG,GAAG,KAAKP,IAAL,CAAUC,MAAV,CAAiBO,UAAjB,CAA4B,IAA5B,CAAZ;AACAD,IAAAA,GAAG,CAACE,SAAJ,GAAgB,mBAAhB,CARkB,CAUlB;;AACAF,IAAAA,GAAG,CAACG,QAAJ,CACEX,kBADF,EACsB;AACpBI,IAAAA,kBAFF,EAEsB;AACpBG,IAAAA,aAHF,EAIED,cAJF;AAMAE,IAAAA,GAAG,CAACI,QAAJ,WAAgB,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,IAAjC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB;AACA,UAAMoB,gBAAgB,GAAG;AACvBC,MAAAA,cAAc,EAAE,OADO;AAEvBC,MAAAA,kBAAkB,EAAE,eAFG;AAGvBC,MAAAA,eAAe,gBAAS,KAAKvB,KAAL,CAAWwB,kBAApB,MAHQ;AAIvBnB,MAAAA,KAAK,EAAE;AAJgB,KAAzB;AAMA,WACE;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEe,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AArCsD","sourcesContent":["import React from 'react'\n\nexport default class QuoteCanvas extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let backdropSideMargin = 0.1 * this.refs.canvas.width; //0.1 = 10% margin\n    let backdropVertMargin = 0.25 * this.refs.canvas.height //0.25 = 25% of height\n    let backdropHeight = this.refs.canvas.height / 2; //2 = half the height of canvas, \n    let backdropWidth = \n      this.refs.canvas.width - backdropSideMargin * 2 // 2 is to account for both left and right margin.\n    \n    const ctx = this.refs.canvas.getContext('2d');\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7';\n\n    //create backdrop\n    ctx.fillRect(\n      backdropSideMargin, //x coordinate to start drawing\n      backdropVertMargin, //y coordinate to start drawing\n      backdropWidth,\n      backdropHeight);\n\n    ctx.fillText(`${this.props.quote.body}`);\n  }\n\n  render() {\n    console.log(this.props);\n    const backgroundStyles = {\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n      backgroundImage: `url(${this.props.backgroundImageUrl})`,\n      width: '100%',\n    }\n    return (\n      <canvas ref=\"canvas\" style={backgroundStyles}></canvas>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}