{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/CAPSTONE/motiv8-main-app/motiv8/src/components/CreateAccountForm.js\";\nimport React, { Component } from 'react';\nimport { UserContext } from '../contexts/UserContextManager';\nexport default class CreateAccountForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      passwordConfirm: ''\n    };\n    this.handleTextInput = this.handleTextInput.bind(this);\n  }\n\n  handleTextInput(e) {\n    console.log(e.target.id);\n\n    switch (e.target.id) {\n      case 'email-input':\n        this.setState({\n          email: e.target.value\n        });\n        break;\n\n      case 'username-input':\n        this.setState({\n          userName: e.target.value\n        });\n        break;\n\n      case 'password-input':\n        this.setState({\n          password: e.target.value\n        });\n        break;\n\n      case 'password-confirm-input':\n        this.setState({\n          passwordConfirm: e.target.value\n        });\n        break;\n\n      default:\n        console.error(\"onChange id not found in create account form\");\n    }\n  }\n\n  render() {\n    return React.createElement(UserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, ({\n      methods\n    }) => {\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Create An Account\"), React.createElement(\"form\", {\n        class: \"input-form\",\n        onSubmit: e => methods.handleCreateAccountSubmit(e, this.state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        id: \"email-input\",\n        type: \"text\",\n        onChange: e => this.handleTextInput(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"username-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"input\", {\n        id: \"username-input\",\n        type: \"text\",\n        onChange: e => this.handleTextInput(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        id: \"password-input\",\n        type: \"password\",\n        onChange: e => this.handleTextInput(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password-confirm-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        id: \"password-confirm-input\",\n        type: \"password\",\n        onChange: e => this.handleTextInput(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/dev/Desktop/CAPSTONE/motiv8-main-app/motiv8/src/components/CreateAccountForm.js"],"names":["React","Component","UserContext","CreateAccountForm","constructor","props","state","email","username","password","passwordConfirm","handleTextInput","bind","e","console","log","target","id","setState","value","userName","error","render","methods","handleCreateAccountSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { UserContext } from '../contexts/UserContextManager';\n\nexport default class CreateAccountForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      passwordConfirm: '',\n    }\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n  }\n\n  handleTextInput(e) {\n    console.log(e.target.id);\n    switch (e.target.id) {\n      case 'email-input':\n        this.setState({\n          email: e.target.value\n        })\n        break;\n      case 'username-input':\n        this.setState({\n          userName: e.target.value\n        })\n        break;\n      case 'password-input':\n        this.setState({\n          password: e.target.value\n        })\n        break;\n      case 'password-confirm-input':\n        this.setState({\n          passwordConfirm: e.target.value\n        })\n        break;\n      default:\n        console.error(\"onChange id not found in create account form\");\n    }\n  }\n\n  render() {\n    return (\n      <UserContext.Consumer>\n        {({ methods }) => {\n          return (\n            <>\n              <h3>Create An Account</h3>\n              <form class=\"input-form\" onSubmit={(e) => methods.handleCreateAccountSubmit(e, this.state)}>\n              <label htmlFor=\"email-input\">Email:</label>\n                <input \n                  id=\"email-input\"\n                  type=\"text\"\n                  onChange={(e) => this.handleTextInput(e)}/>\n\n                <label htmlFor=\"username-input\">Username:</label>\n                <input \n                  id=\"username-input\"\n                  type=\"text\"\n                  onChange={(e) => this.handleTextInput(e)}/>\n\n                <label htmlFor=\"password-input\">Password:</label>\n                <input \n                  id=\"password-input\" \n                  type=\"password\" \n                  onChange={(e) => this.handleTextInput(e)} />\n\n                <label htmlFor=\"password-confirm-input\">Confirm Password</label>\n                <input \n                  id=\"password-confirm-input\" \n                  type=\"password\" \n                  onChange={(e) => this.handleTextInput(e)}/>\n\n                <input type=\"submit\" />\n              </form>\n            </>\n          )\n        }}\n      </UserContext.Consumer>\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}