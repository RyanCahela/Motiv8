{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/CAPSTONE/motiv8/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Nav from './components/Nav';\nimport Quote from './components/Quote';\nimport QuoteDisplay from './components/QuoteDisplay';\nimport QuoteControls from './components/QuoteControls';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getQuoteAssets = () => {\n      this.setBackgroundUrl(this.backgroundUrlItObj.next());\n    };\n\n    this.state = {\n      quotes: [{\n        body: 'Always focus on how far you\\'ve come, not how far you have to go.',\n        author: 'Anonymous'\n      }],\n      backgroundImageUrls: [],\n      backgroundImageUrl: '',\n      previousBackgroundImageUrl: '',\n      fontFamily: 'Arial, Helvetica, sans-serif'\n    };\n  }\n\n  componentDidMount() {\n    this.getBackgroundImages(30);\n  }\n\n  getBackgroundImages(numberOfImages) {\n    if (numberOfImages > 30) {\n      numberOfImages = 30;\n    }\n\n    fetch(\"https://api.unsplash.com/photos/random?count=\".concat(numberOfImages), {\n      headers: {\n        Authorization: 'Client-ID 637ad8107185907a6e559449be25e4c6fb9429f66f500149003592bbf8bf49ce'\n      }\n    }).then(res => res.json()).then(resJson => {\n      console.log(resJson);\n      this.setState({\n        backgroundImageUrls: resJson\n      }, //runs after setState\n      () => {\n        this.backgroundUrlItObj = this.createIteratorObj(this.state.backgroundImageUrls);\n        this.getQuoteAssets();\n      });\n    });\n  }\n\n  *createIteratorObj(arr) {\n    for (let obj of arr) {\n      yield obj;\n    }\n  }\n\n  setBackgroundUrl({\n    value,\n    done\n  }) {\n    if (!done) {\n      this.setState({\n        backgroundImageUrl: value.urls.regular\n      });\n    } else {\n      this.getBackgroundImages(30);\n    }\n  }\n\n  render() {\n    //create components to pass down\n    const quoteDisplay = React.createElement(QuoteDisplay, {\n      backgroundImageUrl: this.state.backgroundImageUrl,\n      fontFamily: this.state.fontFamily,\n      quote: this.state.quotes[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n    const quoteControls = React.createElement(QuoteControls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, null, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Quote, {\n      quoteDisplay: quoteDisplay,\n      quoteControls: quoteControls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      getQuoteAssets: this.getQuoteAssets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dev/Desktop/CAPSTONE/motiv8/src/App.js"],"names":["React","Menu","Nav","Quote","QuoteDisplay","QuoteControls","App","Component","constructor","props","getQuoteAssets","setBackgroundUrl","backgroundUrlItObj","next","state","quotes","body","author","backgroundImageUrls","backgroundImageUrl","previousBackgroundImageUrl","fontFamily","componentDidMount","getBackgroundImages","numberOfImages","fetch","headers","Authorization","then","res","json","resJson","console","log","setState","createIteratorObj","arr","obj","value","done","urls","regular","render","quoteDisplay","quoteControls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Nav from './components/Nav';\nimport Quote from './components/Quote';\nimport QuoteDisplay from './components/QuoteDisplay';\nimport QuoteControls from './components/QuoteControls';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [{\n        body: 'Always focus on how far you\\'ve come, not how far you have to go.',\n        author: 'Anonymous'\n      }],\n      backgroundImageUrls: [],\n      backgroundImageUrl: '',\n      previousBackgroundImageUrl: '',\n      fontFamily: 'Arial, Helvetica, sans-serif'\n    }\n  }\n\n  componentDidMount() {\n    this.getBackgroundImages(30);\n  }\n\n  getBackgroundImages(numberOfImages) {\n    if(numberOfImages > 30) {\n      numberOfImages = 30;\n    }\n    fetch(`https://api.unsplash.com/photos/random?count=${numberOfImages}`, {\n      headers: {\n        Authorization: 'Client-ID 637ad8107185907a6e559449be25e4c6fb9429f66f500149003592bbf8bf49ce'\n      }\n    })\n    .then(res => res.json())\n    .then(resJson => {\n      console.log(resJson);\n      this.setState({\n        backgroundImageUrls: resJson,\n      },\n      //runs after setState\n      () => {\n        this.backgroundUrlItObj = this.createIteratorObj(this.state.backgroundImageUrls);\n        this.getQuoteAssets();\n      })\n    });\n  }\n\n  *createIteratorObj(arr) {\n    for(let obj of arr) {\n      yield obj;\n    }\n  }\n\n  setBackgroundUrl({value, done}) {\n    if(!done) {\n      this.setState({\n        backgroundImageUrl: value.urls.regular\n      })\n    }\n    else {\n      this.getBackgroundImages(30)\n    }\n  }\n\n  getQuoteAssets = () => {\n    this.setBackgroundUrl(this.backgroundUrlItObj.next());\n}\n\n  render() {\n    //create components to pass down\n    const quoteDisplay = (\n      <QuoteDisplay \n      backgroundImageUrl={this.state.backgroundImageUrl} \n      fontFamily={this.state.fontFamily}\n      quote={this.state.quotes[0]}/>\n    )\n    const quoteControls = (\n      <QuoteControls />\n    )\n\n    return (\n        <>\n        <Menu />\n        <Quote quoteDisplay={quoteDisplay} quoteControls={quoteControls}/>\n        <Nav getQuoteAssets={this.getQuoteAssets}/>\n        </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}